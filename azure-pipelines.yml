trigger:
  - main

pool:
  name: 'Default'

jobs:
  - job: Build
    displayName: 'Build and Prepare Node.js App'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Install Node.js'

      - script: |
          # Install backend dependencies
          cd mern-user-crud/backend
          npm install

          # Install frontend dependencies and build
          cd ../frontend
          npm install
          npm run build
        displayName: 'Install and Build Backend and Frontend'

      # Debugging steps
      - script: ls -la mern-user-crud/backend
        displayName: 'List files in backend directory'

      - script: ls -la mern-user-crud/frontend/dist
        displayName: 'List files in frontend/dist directory'

      # Upload artifact for deployment
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(System.DefaultWorkingDirectory)/mern-user-crud/backend'
          artifactName: 'backend'
          publishLocation: 'Container'
        displayName: 'Publish Backend Artifact'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(System.DefaultWorkingDirectory)/mern-user-crud/frontend/dist'
          artifactName: 'frontend'
          publishLocation: 'Container'
        displayName: 'Publish Frontend Artifact'


  - job: Deploy
    displayName: 'Deploy Node.js App to Azure Web App'
    dependsOn: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      # Ensure Web App Exists
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'Madhusudan Parasar VSEnt–MPN'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            APP_NAME="ReactDemoAppDeploy"
            RESOURCE_GROUP="ReactDemoAppDeploy"  # Update if needed
            APP_PLAN="ReactDemoAppDeployPlan"
            LOCATION="CentralIndia"

            # Check if the web app exists
            EXISTING_APP=$(az webapp list --query "[?name=='$APP_NAME'].name" --output tsv)
            
            if [ -z "$EXISTING_APP" ]; then
                echo "Web App does not exist. Creating..."
                
                # Create App Service Plan with F1 (Free) tier
                az appservice plan create --name $APP_PLAN --resource-group $RESOURCE_GROUP --sku F1 --is-linux

                # Create the Web App
                az webapp create --name $APP_NAME --resource-group $RESOURCE_GROUP --plan $APP_PLAN --runtime "NODE|20-lts"

                echo "Web App $APP_NAME created successfully."
            else
                echo "Web App $APP_NAME already exists."
            fi
        displayName: 'Ensure Web App Exists (F1 Free Plan)'

      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: 'backend'
          downloadPath: '$(System.DefaultWorkingDirectory)/backend-artifact'
        displayName: 'Download Backend Artifact'

      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: 'frontend'
          downloadPath: '$(System.DefaultWorkingDirectory)/frontend-artifact'
        displayName: 'Download Frontend Artifact'

      - task: AzureWebApp@1
        inputs:
          azureSubscription: 'Madhusudan Parasar VSEnt–MPN'
          appType: 'webApp'
          appName: 'ReactDemoAppDeploy'
          package: '$(System.DefaultWorkingDirectory)/backend-artifact'
        displayName: 'Deploy Backend to Azure Web App'

      - task: AzureWebApp@1
        inputs:
          azureSubscription: 'Madhusudan Parasar VSEnt–MPN'
          appType: 'webApp'
          appName: 'ReactDemoAppDeploy'
          package: '$(System.DefaultWorkingDirectory)/frontend-artifact'
        displayName: 'Deploy Frontend to Azure Web App'
